<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_ReservoirVolume" Id="{f84219ca-fdc5-4437-ae77-84a5bc33f122}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ReservoirVolume
VAR_INPUT
	ReservoirVolume : REAL; // L
	ReservoirStartVolume : REAL ; // L
	TotalPipeVolume : REAL ; // L
	PumpFlow : REAL ; // L/s
	
END_VAR
VAR_OUTPUT
	CurrentPipeVolume : REAL ;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF (ReservoirVolume <= ReservoirStartVolume) AND (ReservoirVolume >=(ReservoirStartVolume - TotalPipeVolume) ) THEN
	ReservoirVolume := ReservoirVolume - PumpFlow / (1/simulation_parameters.CycleTime) + simulation_parameters.GravityOilFlow/(1/simulation_parameters.CycleTime) ;
	IF ReservoirVolume > ReservoirStartVolume THEN
		ReservoirVolume :=ReservoirStartVolume ;
	ELSIF (ReservoirVolume <= (ReservoirStartVolume - TotalPipeVolume)) THEN
		ReservoirVolume := (ReservoirStartVolume - TotalPipeVolume) ;
	END_IF
ELSIF (ReservoirVolume >= ReservoirStartVolume) THEN
	ReservoirVolume := ReservoirStartVolume - PumpFlow / (1/simulation_parameters.CycleTime);
ELSIF (ReservoirVolume <= (ReservoirStartVolume - TotalPipeVolume)) THEN
	ReservoirVolume := (ReservoirStartVolume - TotalPipeVolume) + simulation_parameters.GravityOilFlow/(1/simulation_parameters.CycleTime) ;
END_IF

IF ReservoirVolume <= ReservoirStartVolume THEN
	CurrentPipeVolume := ReservoirStartVolume - ReservoirVolume ;
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="FB_ReservoirVolume">
      <LineId Id="10" Count="1" />
      <LineId Id="65" Count="1" />
      <LineId Id="69" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="40" Count="2" />
      <LineId Id="9" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="43" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>